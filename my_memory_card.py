from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *

app = QApplication([])
widow = QWiget()
widow.setWindowTitle('Memory card')


btn_ok = QPushButton('Ответ')
question_label = QLabel('Какой национальности не существует')

RadioGroupBox = QGroupBox('Варианты ответов')
rbtn_1 = RadioButton('Энцы')
rbtn_2 = RadioButton('Смурфы')
rbtn_3 = RadioButton('Чумыльцы')
rbtn_4 = RadioButton('Алеуты')

layout_1 = QHBoxLayout()
layout_2 = QVBoxLayout()
layout_3 = QVBoxLayout()

layout_2.addwidget(rbtn_1)
layout_2.addwidget(rbtn_2)
layout_2.addwidget(rbtn_3)
layout_2.addwidget(rbtn_4)
layout_1.addLayout(layout_2)
layout_1.addLayout(layout_3)

RadioGroupBox.setLayout(layout_1)

layout_line1 = QHBoxLayout()
layout_line2 = QHBoxLayout()
layout_line3 = QHBoxLayout()

layout_line1.addWidget(question_label, aligment = (Qt.AlignHCenter | Qt.AlignVCenter))
layout_line2.addWidget(RadioGroupBox)

layout_line3.addStretch(1)
layout_line3.addWidget(btn_ok, strech = 2)
layout_line3.addStretch(1)

layout_card = QVBoxLayout()

layout_card.addLayout(layout_line1, strech = 2)
layout_card.addLayout(layout_line2, strech = 8)
layout_card.addLayout(layout_line3, strech = 2)
layout_card.setSpacing(5)

def show_result():
    RadioGroupBox.hide()

window.setLayout(layout_card)
window.show()
app.exec()

AnsGroopBox = QGroupBox('Результаты теста')
q1_result = QLabel('Прав ты или нет')

a = QVBoxLayout()
a.addWidget(q1_result, alignment=(Qt.Alignleft | Qt.AlineTop))


setLayout()
def show_result():
    RadioGroupBox.hide()
    AnsGroopBox.show()
    btn_ok.setText('Следующий вопрос')

def show_question():
    RadioGroupBox.show()
    AnsGroopBox.hide()
    btn_ok.setText('Ответить')

    rbtn_1.setCheched(False)
    rbtn_2.setCheched(False)
    rbtn_3.setCheched(False)
    rbtn_4.setCheched(False)
    RadioGroupBox.setExlusive(True)


def start_text():
    if btn_ok.text() == 'Ответить':
        show_result()
    else:
        show_question()

answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]

def ask():
    shaffle(answers)
    answers[rbtn_1].setText(right_answers)
    answers[rbtn_2].setText(wrong1)
    answers[rbtn_3].setText(wrong2)
    answers[rbtn_4].setText(wrong3)
    q1_Question.text('')
    q1_Correct(right_answer)

from random import randint

question_list = [1,2,3,4]

def next_question():
    cur_question = randint(0, len(question_list) - 1)
    q.question_list[cur_question]
    print(f'index: {cur_question}')
    print(f'item: {q}')

next_question()

q: Question

class Question:
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.q = question
        self.ra = right_answer
        self.w1 = wrong1
        self.w2 = wrong3
        self.w3 = wrong3

q = Question('?', '1', '2')
q = Question('?', '1', '2')
q = Question('?', '1', '2')

print(q.__dict__)
print(q.ra)


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































